{"version":3,"sources":["../node_modules/app-reset/app-reset.css","../node_modules/highlight.js/styles/vs2015.css","styles.css"],"names":[],"mappingsnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"example.f69400ca.css","sourceRoot":"..","sourcesContent":["/*\nApp reset by Ben Frain @benfrain / benfrain.com\n\nLatest: https://github.com/benfrain/app-reset\n\nAn opinionated set of resets suitable for building web applications.\n\n## Accessibility Notes\nThese resets target HTML elements that typically receive styling defaults by User Agents that I always need to 'undo'.\n\nBe aware that some of these resets have a negative impact on the default usability and accessibility of a web page. Therefore, ensure you add an equivalent accessible style back that matches your project aesthetic.\n\n## You'll want to run this through Autoprefixer You'll typically need to run this through (https://github.com/postcss/autoprefixer) for production. Only essential prefixes are added here (e.g. proprietary property value/pairs) and you'll need to set prefixing relative to your desired browser support matrix.\n\n*/\n\n/*Hat tip to @thierrykoblentz for this approach: https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */\nhtml {\n    box-sizing: border-box;\n}\n\n/*Yes, the universal selector. No, it isn't slow: https://benfrain.com/css-performance-revisited-selectors-bloat-expensive-styles/*/\n* {\n    /*This prevents users being able to select text. Stops long presses in iOS bringing up copy/paste UI for example. Note below we specifically switch user-select on for inputs for the sake of Safari. Bug here: https://bugs.webkit.org/show_bug.cgi?id=82692*/\n    user-select: none;\n    /*This gets -webkit specific prefix as it is a non W3C property*/\n    -webkit-tap-highlight-color: rgba(255,255,255,0);\n    /*Older Androids need this instead*/\n    -webkit-tap-highlight-color: transparent;\n    /* Most devs find border-box easier to reason about. However by inheriting we can mix box-sizing approaches.*/\n    box-sizing: inherit;\n}\n\n*:before,\n*:after {\n    box-sizing: inherit;\n}\n\n/* Switching user-select on for inputs and contenteditable specifically for Safari (see bug link above)*/\ninput[type],\n[contenteditable] {\n\tuser-select: text;\n}\n\nbody,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np {\n    /*We will be adding our own margin to these elements as needed.*/\n    margin: 0;\n    /*You'll want to set font-size as needed.*/\n    font-size: 1rem;\n    /*No bold for h tags unless you want it*/\n    font-weight: 400;\n}\n\na {\n    text-decoration: none;\n    color: inherit;\n}\n\n/*No bold for b tags by default*/\nb {\n    font-weight: 400;\n}\n\n/*Prevent these elements having italics by default*/\nem,\ni {\n    font-style: normal;\n}\n\n/*Mozilla adds a dotted outline around a tags when they receive tab focus. This removes it. Be aware this is a backwards accessibilty step!*/\na:focus {\n    outline: 0;\n}\n\ninput,\nfieldset {\n    appearance: none;\n    border: 0;\n    padding: 0;\n    margin: 0;\n    /*inputs and fieldset defaults to having a min-width equal to its content in Chrome and Firefox (https://code.google.com/p/chromium/issues/detail?id=560762), we may not want that*/\n    min-width: 0;\n    /*Reset the font size and family*/\n    font-size: 1rem;\n    font-family: inherit;\n}\n\n/* For IE, we want to remove the default cross ('X') that appears in input fields when a user starts typing - Make sure you add your own! */\ninput::-ms-clear {\n    display: none;\n}\n\n/*This switches the default outline off when an input receives focus (really important for users tabbing through with a keyboard) so ensure you put something decent in for your input focus instead!!*/\ninput:focus {\n    outline: 0;\n}\n\ninput[type=\"number\"] {\n    /*Mozilla shows the spinner UI on number inputs unless we use this:*/\n    -moz-appearance: textfield;\n}\n\n/*Removes the little spinner controls for number type inputs (WebKit browsers/forks only)*/\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n    appearance: none;\n}\n\n/*SVG defaults to inline display which I dislike*/\nsvg {\n    display: inline-flex;\n}\n\nimg {\n    /*Make images behave responsively. Here they will scale up to 100% of their natural size*/\n    max-width: 100%;\n    /*Make images display as a block (UA default is usually inline)*/\n    display: block;\n}\n","/*\n * Visual Studio 2015 dark style\n * Author: Nicolas LLOBERA <nllobera@gmail.com>\n */\n\n.hljs {\n  display: block;\n  overflow-x: auto;\n  padding: 0.5em;\n  background: #1E1E1E;\n  color: #DCDCDC;\n}\n\n.hljs-keyword,\n.hljs-literal,\n.hljs-symbol,\n.hljs-name {\n  color: #569CD6;\n}\n.hljs-link {\n  color: #569CD6;\n  text-decoration: underline;\n}\n\n.hljs-built_in,\n.hljs-type {\n  color: #4EC9B0;\n}\n\n.hljs-number,\n.hljs-class {\n  color: #B8D7A3;\n}\n\n.hljs-string,\n.hljs-meta-string {\n  color: #D69D85;\n}\n\n.hljs-regexp,\n.hljs-template-tag {\n  color: #9A5334;\n}\n\n.hljs-subst,\n.hljs-function,\n.hljs-title,\n.hljs-params,\n.hljs-formula {\n  color: #DCDCDC;\n}\n\n.hljs-comment,\n.hljs-quote {\n  color: #57A64A;\n  font-style: italic;\n}\n\n.hljs-doctag {\n  color: #608B4E;\n}\n\n.hljs-meta,\n.hljs-meta-keyword,\n.hljs-tag {\n  color: #9B9B9B;\n}\n\n.hljs-variable,\n.hljs-template-variable {\n  color: #BD63C5;\n}\n\n.hljs-attr,\n.hljs-attribute,\n.hljs-builtin-name {\n  color: #9CDCFE;\n}\n\n.hljs-section {\n  color: gold;\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n\n/*.hljs-code {\n  font-family:'Monospace';\n}*/\n\n.hljs-bullet,\n.hljs-selector-tag,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-selector-attr,\n.hljs-selector-pseudo {\n  color: #D7BA7D;\n}\n\n.hljs-addition {\n  background-color: #144212;\n  display: inline-block;\n  width: 100%;\n}\n\n.hljs-deletion {\n  background-color: #600;\n  display: inline-block;\n  width: 100%;\n}\n",".bar {\r\n    background-color: rgb(235, 235, 235);\r\n}\r\n\r\n.bar .start {\r\n    display: flex;\r\n    align-items: center;\r\n}\r\n\r\n.bar h1 {\r\n    font-size: 18px;\r\n    margin-left: 20px;\r\n}\r\n\r\n.box {\r\n    border: 1px solid rgb(200, 200, 200);\r\n    background-color: white;\r\n    padding: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.box:last-child {\r\n    margin-bottom: 0;\r\n}\r\n\r\n.description {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.type {\r\n    font-family: 'Courier New', Courier, monospace;\r\n}\r\n\r\n.value {\r\n    border: 1px solid rgb(235, 235, 235);\r\n}\r\n\r\n.value span {\r\n    display: inline-block;\r\n    padding: 8px 12px;\r\n}\r\n\r\n.value span:first-child {\r\n    background-color: rgb(235, 235, 235);\r\n}\r\n\r\n.offset {\r\n    display: block;\r\n    position: relative;\r\n    top: -76px;\r\n    visibility: hidden;\r\n}\r\n\r\n.ui-drawer .ui-subheader {\r\n    padding-left: 20px;\r\n    margin-top: 20px;\r\n}\r\n\r\n.inline {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n}\r\n\r\n.label {\r\n    padding: 20px;\r\n    border: 1px solid rgb(235, 235, 235);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: calc(20% - 20px);\r\n}\r\n\r\n.label p {\r\n    margin-top: 20px;\r\n}"]}